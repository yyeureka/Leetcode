#include <string>
#include <vector>
#include <iostream>
using namespace std;

/*
A message containing letters from A-Z is being encoded to numbers using the following mapping:
'A' -> 1
'B' -> 2
...
'Z' -> 26
Given a non-empty string containing only digits, determine the total number of ways to decode it.

Example 1:
Input: "12"
Output: 2
Explanation: It could be decoded as "AB" (1 2) or "L" (12).
Example 2:
Input: "226"
Output: 3
Explanation: It could be decoded as "BZ" (2 26), "VF" (22 6), or "BBF" (2 2 6).

解题思路：
动态规划
关键点是0的处理
10~26可以双位解码
1~9可以单位解码
00、30、40...都解不了 返回0
*/

class Solution {
public:
	int numDecodings(string s) {
		int n = s.size();
		vector<int> v({ 1, 0 });

		for (int i = 0; i < n; i++) {
			if (0 == i) {
				if ('0' == s[i]) return 0;
				v[1] = 1;
			}
			else {
				int tmp = 0;
				if ('0' != s[i]) tmp += v[1];
				if ((s[i - 1] > '0' && s[i - 1] < '2') || ('2' == s[i - 1] && s[i] <= '6')) tmp += v[0];

				if (!tmp) return 0;
				v[0] = v[1];
				v[1] = tmp;
			}
		}
		return v[1];
	}
};

//void main()
//{
//	string s
//	Solution so;
//	cout << so.numDecodings(s) << endl;
//}